//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ao.i_mail.service.data.tests.i_AccountService {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="i_AccountService.IAccountService")]
    public interface IAccountService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountService/CreateUser", ReplyAction="http://tempuri.org/IAccountService/CreateUserResponse")]
        ao.i_mail.service.i_AccountService.User CreateUser(ao.i_mail.service.i_AccountService.User user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountService/CreateUser", ReplyAction="http://tempuri.org/IAccountService/CreateUserResponse")]
        System.Threading.Tasks.Task<ao.i_mail.service.i_AccountService.User> CreateUserAsync(ao.i_mail.service.i_AccountService.User user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountService/GetUser", ReplyAction="http://tempuri.org/IAccountService/GetUserResponse")]
        ao.i_mail.service.i_AccountService.User GetUser(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountService/GetUser", ReplyAction="http://tempuri.org/IAccountService/GetUserResponse")]
        System.Threading.Tasks.Task<ao.i_mail.service.i_AccountService.User> GetUserAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountService/CreateService", ReplyAction="http://tempuri.org/IAccountService/CreateServiceResponse")]
        ao.i_mail.service.i_AccountService.Service CreateService(ao.i_mail.service.i_AccountService.Service service);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountService/CreateService", ReplyAction="http://tempuri.org/IAccountService/CreateServiceResponse")]
        System.Threading.Tasks.Task<ao.i_mail.service.i_AccountService.Service> CreateServiceAsync(ao.i_mail.service.i_AccountService.Service service);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountService/GetService", ReplyAction="http://tempuri.org/IAccountService/GetServiceResponse")]
        void GetService(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountService/GetService", ReplyAction="http://tempuri.org/IAccountService/GetServiceResponse")]
        System.Threading.Tasks.Task GetServiceAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountService/UpdateUser", ReplyAction="http://tempuri.org/IAccountService/UpdateUserResponse")]
        void UpdateUser(ao.i_mail.service.i_AccountService.User user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountService/UpdateUser", ReplyAction="http://tempuri.org/IAccountService/UpdateUserResponse")]
        System.Threading.Tasks.Task UpdateUserAsync(ao.i_mail.service.i_AccountService.User user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountService/GetData", ReplyAction="http://tempuri.org/IAccountService/GetDataResponse")]
        string GetData(int value);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountService/GetData", ReplyAction="http://tempuri.org/IAccountService/GetDataResponse")]
        System.Threading.Tasks.Task<string> GetDataAsync(int value);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountService/GetDataUsingDataContract", ReplyAction="http://tempuri.org/IAccountService/GetDataUsingDataContractResponse")]
        ao.i_mail.service.i_AccountService.CompositeType GetDataUsingDataContract(ao.i_mail.service.i_AccountService.CompositeType composite);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountService/GetDataUsingDataContract", ReplyAction="http://tempuri.org/IAccountService/GetDataUsingDataContractResponse")]
        System.Threading.Tasks.Task<ao.i_mail.service.i_AccountService.CompositeType> GetDataUsingDataContractAsync(ao.i_mail.service.i_AccountService.CompositeType composite);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IAccountServiceChannel : ao.i_mail.service.data.tests.i_AccountService.IAccountService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class AccountServiceClient : System.ServiceModel.ClientBase<ao.i_mail.service.data.tests.i_AccountService.IAccountService>, ao.i_mail.service.data.tests.i_AccountService.IAccountService {
        
        public AccountServiceClient() {
        }
        
        public AccountServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public AccountServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public AccountServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public AccountServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public ao.i_mail.service.i_AccountService.User CreateUser(ao.i_mail.service.i_AccountService.User user) {
            return base.Channel.CreateUser(user);
        }
        
        public System.Threading.Tasks.Task<ao.i_mail.service.i_AccountService.User> CreateUserAsync(ao.i_mail.service.i_AccountService.User user) {
            return base.Channel.CreateUserAsync(user);
        }
        
        public ao.i_mail.service.i_AccountService.User GetUser(int id) {
            return base.Channel.GetUser(id);
        }
        
        public System.Threading.Tasks.Task<ao.i_mail.service.i_AccountService.User> GetUserAsync(int id) {
            return base.Channel.GetUserAsync(id);
        }
        
        public ao.i_mail.service.i_AccountService.Service CreateService(ao.i_mail.service.i_AccountService.Service service) {
            return base.Channel.CreateService(service);
        }
        
        public System.Threading.Tasks.Task<ao.i_mail.service.i_AccountService.Service> CreateServiceAsync(ao.i_mail.service.i_AccountService.Service service) {
            return base.Channel.CreateServiceAsync(service);
        }
        
        public void GetService(int id) {
            base.Channel.GetService(id);
        }
        
        public System.Threading.Tasks.Task GetServiceAsync(int id) {
            return base.Channel.GetServiceAsync(id);
        }
        
        public void UpdateUser(ao.i_mail.service.i_AccountService.User user) {
            base.Channel.UpdateUser(user);
        }
        
        public System.Threading.Tasks.Task UpdateUserAsync(ao.i_mail.service.i_AccountService.User user) {
            return base.Channel.UpdateUserAsync(user);
        }
        
        public string GetData(int value) {
            return base.Channel.GetData(value);
        }
        
        public System.Threading.Tasks.Task<string> GetDataAsync(int value) {
            return base.Channel.GetDataAsync(value);
        }
        
        public ao.i_mail.service.i_AccountService.CompositeType GetDataUsingDataContract(ao.i_mail.service.i_AccountService.CompositeType composite) {
            return base.Channel.GetDataUsingDataContract(composite);
        }
        
        public System.Threading.Tasks.Task<ao.i_mail.service.i_AccountService.CompositeType> GetDataUsingDataContractAsync(ao.i_mail.service.i_AccountService.CompositeType composite) {
            return base.Channel.GetDataUsingDataContractAsync(composite);
        }
    }
}
